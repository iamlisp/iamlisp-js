; https://www.rosettacode.org/wiki/Balanced_brackets

; Determine whether the string contains pairs of opening/closing
; brackets (in that order), none of which mis-nest.
(defun brackets-balanced? (str)
  (where (left-brackets  { "{" 0 "(" 1 "[" 2 } 
          right-brackets { "}" 0 ")" 1 "]" 2 })
    (defun iter (index stack) 
      (cond ((>= index (size str)) true)
            ((where (char (nth index str))
              (cond ((has char left-brackets)
                     (iter (inc index) (+: (get char left-brackets) stack)))
                    ((has char right-brackets)
                     (cond ((eq? (get char right-brackets) (head stack))
                            (iter (inc index) (tail stack)))
                           (false)))
                    ((iter (inc index) stack)))))))
    (iter 0 Nil)))

; Example
(brackets-balanced? "{}") ; true
(brackets-balanced? "{}[]()") ; true
(brackets-balanced? "{[()]}") ; true
(brackets-balanced? "{[}]") ; false
(brackets-balanced? ")(") ; false

(defmacro inc (n) (+ n 1))
(defmacro dec (n) (- n 1))
(defmacro zero? (n) (eq? n 0))

(defun fib1 (n)
  (loop (x 0 y 1 i n)
    (cond ((<= i 0) x) ((recur y (+ x y) (dec i))))))

(defun fib2 (n) 
  (defun iter (x y i)
    (cond ((<= i 0) x) ((iter y (+ x y) (dec i)))))
  (iter 0 1 n))

(defmacro even? (n) (zero? (% n 2)))
(defmacro odd? (n) (not (even? n)))
